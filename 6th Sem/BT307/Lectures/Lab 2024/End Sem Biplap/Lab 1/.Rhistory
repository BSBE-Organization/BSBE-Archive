data <- read.csv("C:/Users/adity/OneDrive/Desktop/BT307/Lab 1/data1.csv")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/Lab 1/data1.csv")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplab/Lab 1/data1.csv")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 1")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 1")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 1/data1.csv")
plot(data, xlab="Age", ylab="Systolic Blood Pressure", pch=21, cex=1.5)
cor(data$age, data$systolic.pressure, method="pearson")
cor.test(data$age, data$systolic.pressure, method="pearson")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 1/data1.csv")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 2/data1.csv")
y <- data$g1
x <- data$g2
plot(x, y, xlab="g2", ylab="g1", col="blue", main="Expression of g1 and g2")
cor(x, y , method="pearson")
reg1 <- lm(y ~ x, data = data)
summary(reg1)
abline(reg1, col="red")
reg2 <- lm(y ~ x+0, data = data)
summary(reg2)
abline(reg2, col="red")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 3/data2.csv")
reg <- lm( S ~ . , data = data)
reg <- lm( S ~ . , data = data)
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 3/data2.csv")
reg <- lm( S ~ . , data = data)
summary(reg)
reg2 <- lm(S ~ M + P + R, data = data)
summary(reg2)
train <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 4/spider_train.csv")
logit <- glm( spider ~ size, data = train, family= "binomial" )
summary(logit)
test <- read.csv("spider_test.csv")
test <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 4/spider_test.csv")
p.test <- predict( logit, test, type= "response" )
# for cutoff = 0.3
c1.test <- ifelse( p.test > 0.3, 1, 0 )
tab1.test <- table( predicted = c1.test, Actual = test$spider )
print( tab1.test )
sn1.test <- tab1.test[2,2] / sum(tab1.test[,2])
sp1.test <- tab1.test[1,1] / sum(tab1.test[,1])
# for cutoff = 0.5
c2.test <- ifelse( p.test > 0.5, 1, 0 )
tab2.test <- table( predicted = c2.test, Actual = test$spider )
print( tab2.test )
sn2.test <- tab2.test[2,2] / sum(tab2.test[,2])
sp2.test <- tab2.test[1,1] / sum(tab2.test[,1])
# cutoff = 0.7
c3.test <- ifelse( p.test > 0.7, 1, 0 )
tab3.test <- table( predicted =c3.test, Actual= test$spider )
print( tab3.test )
sn3.test <- tab3.test[2,2] / sum(tab3.test[,2])
sp3.test <- tab3.test[1,1] / sum(tab3.test[,1])
x = c(0.3, 0.5, 0.7)
y = c(sn1.test, sn2.test, sn3.test)
barplot(y, x, xlab = "Cutoff", ylab = "Sensitivity", ylim = c(0,1), names.arg = c("0.3","0.5","0.7"), main = "Sensitivity vs Cutoff")
axis(1,c(1,2,3))
c1.test
tab1.test
print( tab1.test )
sn1.test <- tab1.test[2,2] / sum(tab1.test[,2])
sn1.test
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 5/facs.csv")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 5/facs.csv")
set.seed(1)
k2 <- kmeans(data, 2, iter.max=1000, nstart=50)
k3 <- kmeans(data, 3, iter.max=1000, nstart=50)
k4 <- kmeans(data, 4, iter.max=1000, nstart=50)
k5 <- kmeans(data, 5, iter.max=1000, nstart=50)
k6 <- kmeans(data, 6, iter.max=1000, nstart=50)
w2 <- k2$tot.withinss
w3 <- k3$tot.withinss
w4 <- k4$tot.withinss
w5 <- k5$tot.withinss
w6 <- k6$tot.withinss
wcss <- c(w2,w3,w4,w5,w6)
barplot(wcss, names=seq(2,6), xlab="k", ylab="within cluster ss")
col2 <- data$FL2.H
col3 <- data$FL3.H
col4 <- data$FL4.H
View(data)
plot(col2, col3, col=k3$cluster, ylab="FL2.H", xlab="FL3.H", main="FL2.H vs FL3.H", pch=20, cex=1)
View(data)
View(data)
plot(col3, col4, col=k3$cluster, ylab="FL3.H", xlab="FL4.H", main="FL3.H vs FL4.H", pch=20, cex=1)
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 6/image.csv")
data <- read.csv("C:/Users/adity/OneDrive/Desktop/Lab/BT307/End Sem Biplap/Lab 6/image.csv")
View(data)
View(data)
cov.d <- cov(data[ ,2:14])
View(cov.d)
cov.d <- cov(data[ ,2:14])
View(cov.d)
eigen <- eigen(cov.d)
View(eigen)
L <- eigen$values
L.s <- L/sum(L)
plot(L.s, type="b",main="Scree Plot", xlab="Principal Component", ylab="Eigenvalue (Relative Variance)")
v <- eigen$vectors
View(v)
v <- -v
data.mat <- data.matrix(data[ ,2:14])
View(data.mat)
P <- data.mat%*%v
colnames(P) <- c('PC1','PC2','PC3','PC4','PC5','PC6','PC7','PC8','PC9','PC10','PC11','PC12','PC13')
rownames(P) <- data[,1]
plot(P[,1:2],main = "PC1 vs PC2", xlab = "PC1", ylab = "PC2")
View(P)
